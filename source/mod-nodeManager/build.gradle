apply plugin: 'java'
apply plugin: 'eclipse'

defaultTasks = ['assemble']

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

jar.enabled = false // We don't produce a jar

configurations {
  provided
}

repositories {
  //mavenLocal()
  //maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  mavenCentral()
}

dependencies {
  //compile      "org.apache.zookeeper:zookeeper:$zookeeperVersion"
  compile      "redis.clients:jedis:$jedisVersion"
  compile      "com.google.guava:guava:$guavaVersion"
  compile      "commons-lang:commons-lang:2.6"
  compile      "org.slf4j:slf4j-log4j12:1.6.6"
  compile      fileTree(dir: 'sodabox-libs', include: '*.*')
  
  provided     "org.vert-x:vertx-core:$vertxVersion"
  provided     "org.vert-x:vertx-platform:$vertxVersion"
  
  testCompile  "org.vert-x:vertx-lang-java:$vertxVersion"
  testCompile  "org.vert-x:vertx-lang-rhino:$vertxVersion"
  testCompile( "org.vert-x:vertx-testframework:$vertxVersion" ) {
    transitive = false
  }
  testCompile  "org.mozilla:rhino:$rhinoVersion"
  testCompile  "junit:junit:$junitVersion"
}

sourceSets {
  main {
    compileClasspath = compileClasspath + configurations.provided
  }
}

task copyMod( type:Copy, dependsOn: 'classes' ) {
  into "build/mod/$modulename-v$version"
  from 'build/classes/main'
  from 'src/main/conf'
  into( 'lib' ) {
    from configurations.compile
  }
}

// Package into build/libs/mod.zip
task dist( type: Zip, dependsOn: 'copyMod' ) {
  group = 'vert.x'
  description = "Assembles a vert.x module in 'mod.zip' format"
  destinationDir = project.file('build/libs')
  archiveName = 'mod.zip'
  from project.file("build/mod")
}


task sodabox( type:Copy, dependsOn: 'dist' ) {
  into '../../mods'
  from 'build/mod'
}

task prepareVertxTest(type: Sync, dependsOn: 'copyMod' ) {
  from 'build/mod'
  into 'build/tmp/mod-test'
}

test {
  // Can't have the app on the vert.x classpath
  classpath = files( classpath.findAll {
    !( it.toString() ==~ /.+build\/(classes|resources)\/main$/ )
  } )

  // Some vert.x properties
  systemProperty 'vertx.test.timeout', 10
  systemProperty 'vertx.mods', "$projectDir/build/tmp/mod-test"
  systemProperty 'vertx.version', "$project.version"
  systemProperty 'vertx.name', "$modulename-v$version"
  systemProperty 'java.util.logging.config.file', "$projectDir/conf/logging.properties"
  

  // Show output
  testLogging.showStandardStreams = true

  // No idea why we need to depend on testClasses...
  dependsOn << [ 'testClasses', 'copyMod', 'prepareVertxTest' ]
}


task collectDeps(type: Copy) {
  group = 'vert.x'
  description = 'conveniently collect dependencies for other IDEs'
  destinationDir = file("build/deps")
  into("compile") {
    from configurations.compile
  }
  into("test") {
    from configurations.testCompile
  }
}